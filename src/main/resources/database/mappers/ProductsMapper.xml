<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- namespace의 값은 다른 mapper의 namespace와 중복 x -->
  <!-- 사용하는 DAO의 패키지명.클래스명을 주로 사용 -->
<mapper namespace="com.root.app.products.ProductDAO">
	<!-- DAO의 메서드명을 ID로 사용 -->
	<select id="getDetail" resultType="com.root.app.products.ProductDTO" parameterType="com.root.app.products.ProductDTO">
		<!-- ResultType => 컬럼명과 DTO의 setter의 이름과 같은 맵핑 -->
		<!-- ? 값 #{getter의 이름}, DTO가 아닐때는 변수명 -->
		<!-- map #{map의 Key}, 배열 또는 리스트 #{index번호} -->
		SELECT * FROM PRODUCTS WHERE PRODUCTNUM = #{productNum}
	</select>
	
	<select id="getList" resultType="com.root.app.products.ProductDTO">
		SELECT * FROM PRODUCTS
	</select>
	
	<insert id="add" parameterType="com.root.app.products.ProductDTO">
		INSERT INTO PRODUCTS VALUES (PDT_NUM_SEQ.NEXTVAL, #{productName}, #{productRate}, #{productDate}, #{productDetail})
	</insert>
	
	<update id="update" parameterType="com.root.app.products.ProductDTO">
		UPDATE PRODUCTS SET PRODUCTNAME = #{productName}, PRODUCTRATE = #{productRate}, PRODUCTDATE = #{productDate}, PRODUCTDETAIL = #{productDetail}
		WHERE PRODUCTNUM = #{productNum}
	</update>
	
	<delete id="delete" parameterType="com.root.app.products.ProductDTO">
		DELETE PRODUCTS WHERE PRODUCTNUM = #{productNum}
	</delete>
</mapper>